             Дизассемблеp DASM.
          Руководство пользователя.
    
    Программа  DASM позволяет получить ис-
ходный  ассемблерный  текст программ из их
машинного кода. Это бывает необходимо  при
изучении,  модификации и русификации прог-
рамм. Ассемблерный текст соответсвует мне-
монике  принятой  для  процессора Z80, ис-
пользуемого в коипьютере Кворум (как и  во
всех ZX-Spectrum совместимых машинах).
    
    При работе с DASM используются следую-
щие типы файлов:
    COM - исходный с машинным кодом;
    CTL - с контрольными точками;
    SYM - с символическими метками;
    DOC - с коментариями;
    ASM  -   результирующий   ассемблерный
          текст;
    ALL - файлы COM, CTL, SYM и DOC.
    
    Для запуска дизассемблера введите:
             DASM<ENTER>.
на экране будет:
    DASM, Version 1.5
    DASM for ZILOG-Standart Mnemonics
            Derived from ZZSOURCE/RESOURCE
    
    Type H for Help, ? for Stats
    *_
    
    Команда ? выдает на экран информацию о
распределении памяти при работе DASM:
    Scratch Area Start = 2600
    Scratch Area End   = AA00
    
    COM Start = 0100
    COM End   = 004B
    
    SYMTBL = 2C00 2C00
    PC     = 0100
    OFFSET = 4C00
    COMNTS = 8C00 8C00
    CTLTBL = 2600 2600
    Symbol Comments are OFF
    *_
    Первые две строки показывают адрес на-
чала и конца свободной памяти DASM.
    Следующие  две  строки показыают адрес
начала и конца загруженной в DASM програм-
мы в машинном коде (COM файла).
    Следующие строки показывают зоны памя-
ти, занятые соответственно:
    SYMTBL - таблицей  символических  имен
меток;
    COMNTS - таблицей коментариев;
    CTLTBL - таблицей контрольных точек;
    PC - адрес текущего указателя програм-
много счетчика (относительный);
    OFFSET  - адрес смещения используемого
при загрузке COM - файла.
    
    Необходимо учитывать, что  при  работе
DASM используются абсолютные и относитель-
ные (по отношению к загруженной программе)
адреса.  Ввод и отображение адресов и дан-
ных  производится  только  в   HEX-формате
(шестнадцатеричном).
    
    Для вывода на экран набора команд, ко-
торые используются DASM введите H<ENTER>.
    К сожалению исходная программа  расчи-
тана  на  работу  с 80-символьным экраном,
поэтому текст встроенного Help занимает  2
экрана Кворума. Для останова выдачи помощи
нажмите ^S, продолжение просмотра произво-
дится повторным нажатием ^S.
    
    В состав команд входят следующие:
-  ;addr,comment   Enter Comment at addr
ввод  строки коментария к указанному адре-
су;
-  ;addr           List comment at addr
выдача на экран листинга комментариев  на-
чиная с указанного адреса;
-  ;               List Comment Table
выдача всей таблицы коментариев;
-  ;addr,          Delete Comment
удаление коментария связанного с указанным
адресом;
-  A (see L)       Attempt to find DB's
поиск текстов в машинном коде;
-  B (see L)       Build Symbol Table
построение таблицы символических имен;
-  C               Dump Control Table
выдача на экран таблицы контрольных точек;
-  Cnnnn           Dump Ctrl Table at nnnn
выдача  контрольных точек начиная с адреса
nnnn;
-  Cnnnn,x         Set Ctrl (x=BEHISW)
установка контрольной точки для указанного
адреса nnnn, где:
    B  -  начало  последовательности  байт
(текста);
    E  - конец программы;
    H - начало последовательности байт (не
текст);
    I - начало интерпретации команд;
    S  - начало зарезервированного участка
программы  (определяемого   псевдокомандой
ассемблера DS);
    W - начало таблицы адресов (двухбайто-
вых переменных).
-  Dnnnn           Dump from nnnn on
выдать  на экран одну страницу содержимого
памяти (дамп), начиная с указанного адреса
в HEX и ASCII формате;
-  Daaaa,bbbb      Dump over range
выдать дамп памяти в  указанном  диапазоне
адресов;
-  D,bbbb          Dump thru bbbb
то же от текущего адреса до указанного;
-  D               Dump 80H more
выдать следующую страницу дампа памяти;
-  D=nn            Set Dump Size Default
установить размер страницы дампа;
-  DS              Dump the Symbol Table
выдать  на экран содержимое таблицы симво-
лических имен программы;
-  DS.symbol       Dump starting at symbol
выдать таблицу начиная с имени;
-  Ennnn,.symbol   Enter symbol into table
ввести  символическое  имя  соответсвующее
указанному адресу;
-  Fnnnn,ssss      Find nnnn after ssss
найти адрес nnnn после ssss;
-  F or Fnnnn      Cont Find or Find nnnn
продолжить  поиск  указанного  адреса либо
искать nnnn;
-  Issss,oooo      Inc addrs>=ssss by oooo
инкремент указанного адреса;
-  K.symbol        Kill symbol from table
удалить  указанное  символическое  имя  из
таблицы;
-  L               List next 20 lines
показать следующие 20 линий дизассемблера;
-  Lssss,eeee      List over range
показать листинг в указанном диапазоне ад-
ресов;
-  L,eeee          List to eeee
показать листинг от текущего до указанного
адреса;
-  Lssss           List 20 lines from ssss
20 строк листинга от указанного адреса;
-  L=nn[,others]   Set list default
установить длину страницы листинга;
-  O               Print current offset
выдать на  экран  адрес текущего смещения,
используемого при загрузке COM - файлов;
-  Onnnn           Set new offset
установить новый адрес смещения;
-  Pssss,eeee      Generate program prolog
генерация пролога программы в виде  указа-
телей меток не вошедших в диапазон указан-
ных адресов;
-  Q               Quit prefix

-  Rfilename.COM   Read file @ offset+100H
читать  указанный  файл  в память с адреса
offset+100H;
-  Rfilename.CTL   Read Control Table
читать таблицу контрольных точек;
-  Rfilename.SYM   Read Symbol Table
читать таблицу символических имен;
-  Rfilename.DOC   Read Comments Table
чистать таблицу коментариев;
-  Rfilename.ALL   Read CTL, SYM, DOC, COM
читать все указанные файлы;
-  Sfilename.ASM   Save ASM File
открыть для  записи  файл  результирующего
файла с ассемблерным текстом;
-  Sfilename.CTL   Save CTL File
сохранить таблицу контрольных точек;
-  Sfilename.SYM   Save SYM File
сохранить таблицу символических имен;
-  Sfilename.DOC   Save DOC File
сохранить коментарии;
-  Sfilename.ALL   CTL, SYM, DOC, ASM
сохранить все указанные файлы;
-  Unnnn           Set Comment Table addr
установка адреса начала таблицы коментари-
ев (адрес абсолютный);
-  X               Restart DASM
установка дизассемблера в исходное состоя-
ние;
-  Z               Write EOF to ASM File
закрытие  файла  .ASM в конце процесса ди-
зассемблирования (то же самое  выполняется
по контрольной точке E);
-  ?               Print Statistics
выдача  информации  о распределении памяти
DASM.
    
    Указанный набор команд позволяет полу-
чить текст ассемблерной программы  из  ис-
ходного   машинного  кода,  модифицировать
его, а  затем  с  помощью  макроассемблера
M80 и компановщика L80, получить новый ко-
мандный файл с внесенными в него изменени-
ями.
    
    Рассмотрим процесс  дизассемблирования
любой транзитной команды CP/M, для которой
характерным является -  адрес  загрузки  и
старта  равный  100H  и  расширение всегда
COM.
    После запуска DASM загрузите  машинный
код  программы,  который  на  диске должен
хранится в файле с расширением COM, коман-
дой Rfilename.COM.
    Установите  контрольные точки начала и
конца программы по COM Start и по COM End,
которые выдаются по команде ?, например:
    *C100,I
    *C2600,E
    Просмотрите с помощью команды D содер-
жимое кодов программы на наличие текстов в
ее теле в указанном диапазоне адресов, и в
начале и конце этих участков установите:
    *Cadr1,B
    *Cadr2,I
    соответственно.
    Командой   Ladr   просмотрите  листинг
программы в дизассемблерном виде, и  в  не
вызывающих  сомнения  участках, содержащих
машинные коды (это приходит с опытом), ко-
мандой Badr начинайте формирование таблицы
символических имен, которые по мере дизас-
семблирования позволяют  легче  ориентиро-
ватся в теле программы (в частности позво-
ляют  выделить участки с адресами и данны-
ми, которые фиксируются контрольными  точ-
ками W, H ©и S).
    После того как вы, таким образом прос-
мотрели все тело программы, в заданном ди-
апазоне адресов, командами Sfilename.CTL и
Sfilename.SYM  сохраните  на диске таблицы
контрольных  точек  и  символических имен,
что пригодится вам, если за один  раз  вам
не удалось правильно установить все нужные
метки.
    Откройте  для  записи  файл результата
командой  Sfilename.ASM.  Теперь  наберите
команду P100,2600 (адреса должны соответс-
твовать началу и концу конкретной програм-
мы), в результате в файл ASM будет записан
пролог  программы,  содержащий определение
символических меток, не  вошедших  в  тело
программы  (обычно  это данные). Затем ко-
мандой B100,2600 в файл  ASM  записывается
текст самой программы, котоpый завершается
псевдокомандой ассемблера END (при наличии
в таблице CTL команды E). Закрыть файл ASM
на любом этапе можно командой Z.
    Выход  из дизассемблера осуществляется
нажатием ^C.
    Файл результата на диске будет записан
с именем filename.ASM.
    Для  работы  с  макроассемблером   M80
pекомендуется  переименовать  его  в  файл
filename.MAC  (иначе  придется  расширение
ASM всегда набирать при вызове M80). В на-
чало текста ассемблерной программы вставь-
те редактором текстов (например ED)  псев-
докоманду  .Z80, что указывает на примене-
ние соответствующей мнемоники команд.
    
******************************************
    Примечание:
    Это описание является не полным и дает
только  начальные  сведения  о   программе
DASM. Работа с ней, а также  с  отладчиком
ZSID,   позволяет  хорошо  изучить  методы
программирования в машинных кодах и приме-
нять эти методы в своей работе.
******************************************

klmnopqrstuvwxyz{|}~А